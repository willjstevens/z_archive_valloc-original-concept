
CREATE SCHEMA VALLOC AUTHORIZATION valloc;

SET SCHEMA VALLOC;

CREATE TABLE USER_SUBJECT
(
	ID INT NOT NULL 
		GENERATED ALWAYS AS IDENTITY 
		CONSTRAINT SUBJECT_ID_PK PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	USERNAME VARCHAR(50) NOT NULL,
	ENABLED INT NOT NULL
);

CREATE TABLE PASSWORD
(
	ID INT NOT NULL 
		GENERATED ALWAYS AS IDENTITY 
		CONSTRAINT PASSWORD_ID_PK PRIMARY KEY,
	USER_SUBJECT_ID INT NOT NULL,
	CONSTRAINT SUBJECT_ID_FK
		FOREIGN KEY (USER_SUBJECT_ID)
		REFERENCES USER_SUBJECT (ID),
	PASSWORD VARCHAR (50) NOT NULL,
	EXPIRED TIMESTAMP
);

CREATE TABLE ROLE
(
	ID INT NOT NULL 
		GENERATED ALWAYS AS IDENTITY 
		CONSTRAINT ROLE_ID_PK PRIMARY KEY,
	ROLE VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500) NOT NULL
);

CREATE TABLE PERMISSION_TYPE
(
	ID INT NOT NULL 
		GENERATED ALWAYS AS IDENTITY 
		CONSTRAINT PERMISSION_TYPE_ID_PK PRIMARY KEY,
	TYPE VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500) NOT NULL
);

CREATE TABLE PERMISSION
(
	ID INT NOT NULL 
		GENERATED ALWAYS AS IDENTITY 
		CONSTRAINT PERMISSION_ID_PK PRIMARY KEY,
	PERMISSION_TYPE_ID INT NOT NULL,
	CONSTRAINT PERMISSION_TYPE_ID_FK
		FOREIGN KEY (PERMISSION_TYPE_ID)
		REFERENCES PERMISSION_TYPE (ID),
	PERMISSION VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500) NOT NULL
);

CREATE TABLE PERMISSION_ACTION
(
	ID INT NOT NULL 
		GENERATED ALWAYS AS IDENTITY 
		CONSTRAINT PERMISSION_ACTION_ID_PK PRIMARY KEY,
	PERMISSION_ID INT NOT NULL,
	CONSTRAINT PERMISSION_ID_FK
		FOREIGN KEY (PERMISSION_ID)
		REFERENCES PERMISSION (ID),
	ACTION VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500) NOT NULL
);

CREATE TABLE SUBJECT_ROLES
(
	USER_SUBJECT_ID INT NOT NULL,
	CONSTRAINT SUBJECT_ID_FK
		FOREIGN KEY (USER_SUBJECT_ID)
		REFERENCES USER_SUBJECT (ID),
	ROLE_ID INT NOT NULL,
	CONSTRAINT ROLE_FK
		FOREIGN KEY (ROLE_ID)
		REFERENCES ROLE (ID)
);

CREATE TABLE ROLE_PERMISSIONS
(
	ROLE_ID INT NOT NULL,
	CONSTRAINT ROLE_ID_FK
		FOREIGN KEY (ROLE_ID)
		REFERENCES ROLE (ID),
	PERMISSION_ID INT NOT NULL,
	CONSTRAINT PERMISSION_ID_FK
		FOREIGN KEY (PERMISSION_ID)
		REFERENCES PERMISSION (ID)
);

-- whether/not autocommit
COMMIT; 
